# Virtual Safespace API
# Blame the mess on John Kost (johnnyopcode@gmail.com)
swagger: '2.0'
info:
  title: Virtual Safespace API
  description: tbd
  version: "1.0.0"
# the domain of the service
host: api.safespace.com
# array of all schemes that your API supports
schemes:
  - https
# will be prefixed to all paths
basePath: /v1
produces:
  - application/json
paths:
  /register:
    post:
      summary: 'Register User'
      description: 'Create a user ID for mobile app use.'
      parameters:
        - name: handle
          in: query
          description: 'Common name (handle) of a user.'
          required: true
          type: string
        - name: email
          in: query
          description: 'eMail of user.'
          required: true
          type: string
      tags:
        - Person
      responses:
        200:
          description: 'New Person (user) object'
          schema:
            type: array
            items:
              $ref: '#/definitions/Person'
        default:
          description: 'Unexpected error'
          schema:
            $ref: '#/definitions/Error'
  /registry/user:
    get:
      summary: 'Retrieve Person (user) Rooms list et al'
      description: 'Retrieve the Room(s) subscribed by the Person (user)'
      parameters:
        - name: _id
          in: query
          description: 'A registered Person (user) identity'
          required: true
          type: integer
          format: int32
      tags:
        - Rooms
      responses:
        200:
          description: 'An array of Rooms subscribed to by the Person'
          schema:
            type: array
            items:
              $ref: '#/definitions/Room'
        default:
          description: 'Unexpected error'
          schema:
            $ref: '#/definitions/Error'
  /registry/rooms:
    get:
      summary: 'Retrieve the catalog of Rooms'
      description: 'Lets a user find rooms that they can subscribe to'
      parameters:
        - name: _id
          in: query
          description: 'A Person _id to qualify access to the catalog'
          required: true
          type: integer
          format: int32
      tags:
        - Rooms
      responses:
        200:
          description: 'List of Rooms availble to subscribe to'
          schema:
            type: array
            items:
              $ref: '#/definitions/Room'
        default:
          description: 'Unexpected Error'
          schema:
            $ref: '#/definitions/Error'
  /registry/subscribe:
    post:
      summary: 'Subscribe to a specific Room'
      description: 'Lets a Person subscribe to a specific Room'
      parameters:
        - name: _id
          in: query
          description: '_id of the Person (access validation)'
          required: true
          type: integer
          format: int32
        - name: room_id
          in: query
          description: '_id of the specific Room'
          required: true
          type: integer
          format: int32
      tags:
        - Rooms
      responses:
        200:
          description: 'Subscription succeeded'
          schema:
            type: string
        default:
          description: 'Unexpected Error'
          schema:
            $ref: '#/definitions/Error'
  /posts/create:
    post:
      summary: 'Create a Post'
      description: 'Create a new Post in a specific Room'
      parameters:
        - name: _id
          in: query
          description: 'The _id of the Person (author)'
          required: true
          type: integer
          format: int32
        - name: room_id
          in: query
          description: 'The _id of the Room the post is linked to'
          required: true
          type: integer
          format: int32
        - name: body
          in: query
          description: 'The Body of the Post to the Room'
          required: true
          type: string
      tags:
        - Posts
      responses:
        200:
          description: 'The Post Object'
          schema:
            type: array
            items:
              ref: '#/definitions/Post'
        default:
          description: 'Unexpected Error'
          schema:
            $ref: '#/definitions/Error'
            
definitions:
  Person:
    type: object
    properties:
      _id:
        type: integer
        format: int32
        description: 'Unique identifier representing a User/Person.'
      handle:
        type: string
        description: 'The name/handle of a Person (user).'
      email:
        type: string
        description: 'The eMail of a Person (user)'
  Room:
    type: object
    properties:
      _id:
        type: integer
        format: int32
        description: 'Unique identifier of a Room'
      name:
        type: string
        description: 'A Name for the Room'
  Membership:
    type: object
    properties:
      -room_id:
        type: integer
        format: int32
        description: '_id of a Room object'
      -person_id:
        type: integer
        format: int32
        description: '_id of a Person object'
  Post:
    type: object
    properties:
      -_id:
        type: integer
        format: int32
        description: '_id of the Posted message'
      -person_id:
        type: integer
        format: int32
        description: 'The _id of the Person who made the Post'
      -room_id:
        type: integer
        format: int32
        description: 'The _id of the Room the Post is linked to'
      -body:
        type: string
        description: 'The message Body'
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string
